{"remainingRequest":"C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\src\\components\\DoctorHome.vue?vue&type=template&id=b5ba2464&scoped=true&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\src\\components\\DoctorHome.vue","mtime":1591453530340},{"path":"C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\New folder\\Project\\Frontend\\my-project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}