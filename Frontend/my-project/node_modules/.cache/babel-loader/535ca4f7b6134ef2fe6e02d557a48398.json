{"remainingRequest":"C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\src\\components\\Booking.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\src\\components\\Booking.vue","mtime":1597251096791},{"path":"C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\Database Proj\\Final\\Source Code\\Frontend\\my-project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Booking.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"booking\">\r\n    <form>\r\n        <h3 class=\"text-center\">Make an Appointment</h3>\r\n        <select class=\"form-select wide\" id=\"default-select\" @change=\"getDoctors()\" v-model.trim='booking.department' required>\r\n            <option value=\"\">Select Department</option>\r\n            <option v-for=\"(dept) in departments\" :key=\"dept\">\r\n            {{dept}}\r\n            </option>\r\n        </select>\r\n        <select class=\"form-select wide\" id=\"default-select\" @change=\"getDate()\" v-model.trim='booking.doctor' required>\r\n            <option value=\"\">Select Doctors</option>\r\n            <option v-for=\"(doct) in doctors\" :key=\"doct.id\" v-bind:value=\"{ doctorID: doct.doctorID, name: doct.name }\">\r\n            {{doct.name}}\r\n            </option>\r\n        </select>\r\n        <select class=\"form-select wide\" id=\"default-select\" @change=\"getTime()\" v-model.trim='booking.date' required>\r\n            <option value=\"\">Select Date</option>\r\n            <option v-for=\"(sch) in schedules\" :key=\"sch.id\">\r\n            {{sch.date}} from {{sch.from_time}} to {{sch.to_time}}\r\n            </option>\r\n        </select>\r\n        <select class=\"form-select wide\" id=\"default-select\" v-model.trim='booking.time' required>\r\n            <option value=\"\">Select Time</option>\r\n            <option v-for=\"(time) in unbooked_times\" :key=\"time\">\r\n            {{time}}\r\n            </option>\r\n        </select>\r\n        <input type=\"text\"  placeholder=\"Phone no.\" v-model.trim='booking.contact_no' />\r\n        <input type=\"email\"  placeholder=\"Email\" v-model.trim='booking.email' />\r\n        <button type=\"button\" class=\"boxed-btn3\" v-on:click=\"addAppointment()\">Confirm</button>\r\n    </form>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// import router from '../router'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Booking',\r\n  data () {\r\n    return {\r\n      user_id: '',\r\n      departments: [],\r\n      doctors: [],\r\n      schedules: [],\r\n      booked_times: [],\r\n      unbooked_times: [],\r\n      times: [],\r\n      booking: {\r\n        department: '',\r\n        doctor: '',\r\n        date: '',\r\n        time: '',\r\n        contact_no: '',\r\n        email: '',\r\n        sch_id: ''\r\n      }\r\n    }\r\n  },\r\n  beforeCreate: function () {\r\n    document.body.classList.add('booking')\r\n  },\r\n  created () {\r\n    this.user_id = this.$route.params.id\r\n    this.getDepartments()\r\n  },\r\n  methods: {\r\n    empty: function () {\r\n      this.booking.department = ''\r\n      this.booking.doctor = ''\r\n      this.booking.date = ''\r\n      this.booking.time = ''\r\n      this.booking.contact_no = ''\r\n      this.booking.email = ''\r\n      this.doctors = []\r\n      this.schedules = []\r\n      this.booked_times = []\r\n      this.unbooked_times = []\r\n      this.times = []\r\n    },\r\n    getDepartments: async function () {\r\n      await axios.get('http://localhost:8080/Project/REST-API/doctor/departments')\r\n        .then(response => {\r\n          // console.log(response.data)\r\n          this.departments = response.data.filter(function (item, index, inputArray) { // Remove duplicate elements\r\n            return inputArray.indexOf(item) === index\r\n          })\r\n        })\r\n        .catch(function (error) {\r\n          // currentObject.serverError = true\r\n          if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            console.log(error.response.data)\r\n            console.log(error.response.status)\r\n            console.log(error.response.headers)\r\n            //   currentObject.serverErrorMessage = error.response.data.message\r\n          } else if (error.request) {\r\n            // The request was made but no response was received\r\n            console.log(error.request)\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n          }\r\n          console.log(error.config)\r\n        })\r\n    },\r\n    getDoctors: async function () {\r\n      this.booking.doctor = ''\r\n      this.booking.date = ''\r\n      this.booking.time = ''\r\n      this.doctors = []\r\n      this.schedules = []\r\n      this.booked_times = []\r\n      this.unbooked_times = []\r\n      this.times = []\r\n      if (this.booking.department !== '') {\r\n        await axios.get('http://localhost:8080/Project/REST-API/user/' + this.user_id + '/' + this.booking.department)\r\n          .then(response => {\r\n            // console.log(response.data)\r\n            this.doctors = response.data\r\n          })\r\n          .catch(function (error) {\r\n            // currentObject.serverError = true\r\n            if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n              console.log(error.response.data)\r\n              console.log(error.response.status)\r\n              console.log(error.response.headers)\r\n            //   currentObject.serverErrorMessage = error.response.data.message\r\n            } else if (error.request) {\r\n            // The request was made but no response was received\r\n              console.log(error.request)\r\n            } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message)\r\n            }\r\n            console.log(error.config)\r\n          })\r\n      }\r\n    },\r\n    getDate: async function () {\r\n      this.booking.date = ''\r\n      this.booking.time = ''\r\n      this.schedules = []\r\n      if (this.booking.doctor.doctorID !== '') {\r\n        await axios.get('http://localhost:8080/Project/REST-API/doctor/' + this.booking.doctor.doctorID + '/schedules')\r\n          .then(response => {\r\n            // console.log(response.data)\r\n            const today = new Date()\r\n            // console.log(today)\r\n            for (var i = 0; i < response.data.length; i++) {\r\n              if (response.data[i].date > today.toISOString().substring(0, 10)) {\r\n                this.schedules.push(response.data[i])\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            // currentObject.serverError = true\r\n            if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n              console.log(error.response.data)\r\n              console.log(error.response.status)\r\n              console.log(error.response.headers)\r\n            //   currentObject.serverErrorMessage = error.response.data.message\r\n            } else if (error.request) {\r\n            // The request was made but no response was received\r\n              console.log(error.request)\r\n            } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message)\r\n            }\r\n            console.log(error.config)\r\n          })\r\n      }\r\n    },\r\n    splitTime: function (st, et) {\r\n      var sh = Number(st.split(':')[0])\r\n      var sm = Number(st.split(':')[1])\r\n      var eh = Number(et.split(':')[0])\r\n      var em = Number(et.split(':')[1])\r\n      var i, j\r\n      for (i = sh, j = sm; i <= eh;) {\r\n        if (i === eh && j === em) { break }\r\n        if (i < 10) {\r\n          if (j === 0) {\r\n            this.times.push('0' + i + ':00:00')\r\n          } else {\r\n            this.times.push('0' + i + ':' + j + ':00')\r\n          }\r\n        } else {\r\n          if (j === 0) {\r\n            this.times.push(i + ':' + '00:00')\r\n          } else {\r\n            this.times.push(i + ':' + j + ':00')\r\n          }\r\n        }\r\n        j = j + 15\r\n        if (j >= 60) {\r\n          j = 0\r\n          i = i + 1\r\n        }\r\n      }\r\n      // console.log(this.times)\r\n    },\r\n    getTime: async function () {\r\n      this.booking.time = ''\r\n      this.times = []\r\n      this.booked_times = []\r\n      this.unbooked_times = []\r\n      if (this.booking.doctor.doctorID !== '') {\r\n        await axios.get('http://localhost:8080/Project/REST-API/user/' + this.user_id + '/' + this.booking.doctor.doctorID + '/' + this.booking.date.split(' ')[0])\r\n          .then(response => {\r\n            // console.log(response.data)\r\n            for (var k = 0; k < response.data.length; k++) {\r\n              this.booked_times.push(response.data[k].time)\r\n            }\r\n            // console.log(this.booked_times)\r\n            this.booking.sch_id = this.schedules.filter(schedule => schedule.date === this.booking.date.split(' ')[0] && schedule.from_time === this.booking.date.split(' ')[2])[0].scheduleID\r\n            // console.log(this.booking.sch_id)\r\n            this.splitTime(this.booking.date.split(' ')[2], this.booking.date.split(' ')[4])\r\n            for (var i = 0; i < this.times.length; i++) {\r\n              var match = false\r\n              for (var j = 0; j < this.booked_times.length; j++) {\r\n                if (this.booked_times[j] === this.times[i]) {\r\n                  match = true\r\n                }\r\n              }\r\n              if (!match) {\r\n                this.unbooked_times.push(this.times[i])\r\n              }\r\n            }\r\n            // console.log(this.unbooked_times)\r\n          })\r\n          .catch(function (error) {\r\n            // currentObject.serverError = true\r\n            if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n              console.log(error.response.data)\r\n              console.log(error.response.status)\r\n              console.log(error.response.headers)\r\n            //   currentObject.serverErrorMessage = error.response.data.message\r\n            } else if (error.request) {\r\n            // The request was made but no response was received\r\n              console.log(error.request)\r\n            } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message)\r\n            }\r\n            console.log(error.config)\r\n          })\r\n      }\r\n    },\r\n    addAppointment: async function () {\r\n      if (this.booking.department && this.booking.doctor.doctorID && this.booking.date && this.booking.time && this.booking.email) {\r\n        await axios.post('http://localhost:8080/Project/REST-API/user/' + this.user_id + '/addbooking/' + this.booking.doctor.doctorID + '/' + this.booking.sch_id, {\r\n          department: this.booking.department,\r\n          date: this.booking.date.split(' ')[0],\r\n          time: this.booking.time,\r\n          contact_no: this.booking.contact_no,\r\n          email: this.booking.email\r\n        })\r\n          .then(response => {\r\n            // console.log(response.data)\r\n            // eslint-disable-next-line eqeqeq\r\n            if (response.data == 'Booked Successful') {\r\n              this.empty()\r\n              alert(response.data)\r\n              this.$root.$emit('updateUserBookingTable', 'Booked Successful')\r\n              this.$root.$emit('updateDoctorBookingTable', 'Booked Successful')\r\n            } else {\r\n              alert(response.data)\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n              console.log(error.response.data)\r\n              console.log(error.response.status)\r\n              console.log(error.response.headers)\r\n            //   currentObject.serverErrorMessage = error.response.data.message\r\n            } else if (error.request) {\r\n            // The request was made but no response was received\r\n              console.log(error.request)\r\n            } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n              console.log('Error', error.message)\r\n            }\r\n            console.log(error.config)\r\n          })\r\n      } else {\r\n        alert('Please fill the required fields')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style src=\"../../static/css/booking.css\" scoped></style>\r\n"],"sourceRoot":"src/components"}]}